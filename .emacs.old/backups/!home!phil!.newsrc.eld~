;; -*- mode:emacs-lisp; coding: utf-8-emacs; -*-
;; Gnus startup file.
;; Never delete this file -- if you want to force Gnus to read the
;; .newsrc file (if you have one), touch .newsrc instead.
(setq gnus-newsrc-file-version "Gnus v5.13")

(setq gnus-newsrc-options '"")

(setq gnus-newsrc-last-checked-date '"Fri, 05 Dec 2008 08:18:52 -0800")

(setq gnus-newsrc-alist '(("nnml:ert" 3 ((1 . 59)) ((reply 20 22 36 38 (41 . 42))) "nnml:") ("nndraft:queue" 1 nil nil (nndraft "") ((gnus-dummy (gnus-draft-mode)))) ("nndraft:drafts" 1 ((1 . 15)) nil (nndraft "") ((gnus-dummy (gnus-draft-mode)))) ("nnml:buying" 3 ((1 . 18)) ((forward 9) (tick 12 15) (seen 9 (11 . 12) (15 . 17))) "nnml:") ("nnml:family" 3 ((1 . 42)) ((seen 14 (33 . 35) (37 . 42)) (forward 38) (reply 34 (40 . 41)) (tick 14 41)) "nnml:") ("nnml:nxhtml" 3 ((1 . 78)) ((reply 1 12 14 21 23) (seen (64 . 78))) "nnml:") ("nnml:gems" 3 ((1 . 346)) ((seen (178 . 182) (184 . 346)) (reply 55 59 72 76 128 130 132 260 265 270) (tick 199)) "nnml:") ("nnml:friends" 3 ((1 . 32)) ((forward 20) (reply 10) (tick (23 . 24)) (seen (2 . 10) (12 . 29))) "nnml:") ("nnml:obby-users" 3 ((1 . 8)) ((seen (7 . 8))) "nnml:") ("nnml:xpoint" 3 ((1 . 204)) ((seen 53 (149 . 192) (194 . 204)) (forward 62) (reply 40 51 53 61 86 103 129 131 139 145) (tick 53)) "nnml:") ("nnml:seafunc" 3 ((1 . 1)) nil "nnml:") ("nnml:emacs-rails" 3 ((1 . 363)) ((reply 3 5 (11 . 12) 17 24 29 32 52 69 78 89 98 102 105 129 142 144 147 152 155 163 168 170 177 181 189 222 (227 . 228) 237 243 256 270 284 287 320 324 339 341 348 (356 . 357)) (seen (293 . 363))) "nnml:") ("nnml:seattle.rb" 3 ((1 . 300)) ((reply 30 57 118 137 162 201 277) (seen (1 . 177) (182 . 300))) "nnml:") ("nnml:bus-scheme" 3 ((1 . 1)) nil "nnml:") ("nnml:magit" 3 ((1 . 4)) ((save 1) (reply (3 . 4))) "nnml:") ("nnml:inbox" 3 ((1 . 2516)) ((seen 1169 1640 1853 1902 1912 (1918 . 2212) (2227 . 2245) (2249 . 2280) (2289 . 2349) (2353 . 2452) (2504 . 2516)) (forward 15 1447 1912) (save 1333 1682) (reply 2 (37 . 38) 83 90 92 95 98 (100 . 101) 130 154 194 224 226 234 258 297 333 386 406 421 423 473 487 587 621 649 675 682 685 688 696 839 (855 . 856) 989 1132 1148 1201 1276 1281 1297 1306 1310 1447 1458 1463 1474 1476 1481 1511 1537 (1543 . 1544) 1547 1580 1600 1614 1805 1823 1837 1844 1857 (1882 . 1883) 1912 (2230 . 2231) 2243 2254 2264 2288 2302 (2338 . 2339) 2361 2379 2381 2403 2409) (tick 1169 1640 2302 2400 2509)) "nnml:") ("nnml:conkeror" 3 ((1 . 467)) ((seen (1 . 447) (454 . 467)) (reply 188 368)) "nnml:") ("nnml:compojure" 3 ((1 . 8)) ((seen (3 . 8))) "nnml:") ("nnml:ruby-core" 3 ((1 . 4153)) ((seen 241 821 1605 2519 (2824 . 4155)) (save 241) (reply 19 239 241 554 1323 2493) (tick 241 821 1605 2519)) "nnml:") ("nnml:clojure" 3 ((1 . 928)) ((seen (1 . 844) (873 . 881) 884 (889 . 891) 895 (899 . 929))) "nnml:") ("nnml:emacs-devel" 3 ((1 . 10201)) ((seen 437 1587 4631 7370 7493 (8166 . 8981) (9007 . 9082) (9108 . 9210) (9240 . 9505) (9507 . 9509) (9641 . 10144) (10195 . 10201)) (save 437) (reply 430 440 469 1570 6250 7314 7320 7477 7493 7849 9139) (tick 4631 9947 9994)) "nnml:") ("nnfolder+archive:sent" 3 ((1 . 310)) ((reply 8 253) (tick 82) (seen 82)) (nnfolder "archive" (nnfolder-directory "~/Mail/archive") (nnfolder-active-file "~/Mail/archive/active") (nnfolder-get-new-mail nil) (nnfolder-inhibit-expiry t)))))

(setq gnus-server-alist '(("archive" nnfolder "archive" (nnfolder-directory "~/Mail/archive") (nnfolder-active-file "~/Mail/archive/active") (nnfolder-get-new-mail nil) (nnfolder-inhibit-expiry t))))

(setq gnus-killed-list '("nnml:misc" "nnml:sent" "nnml:rubygems" "nnml:feeds" "nnml:bogus" "nnml:ruby-emacs" "nnml:alisha" "nnml:rails-emacs"))

(setq gnus-topic-topology '(("Gnus" visible) (("lists" invisible nil nil)) (("misc" visible nil nil))))

(setq gnus-topic-alist '(("misc" "nnml:inbox" "nnml:buying" "nnml:ert" "nnml:xpoint" "nndraft:queue" "nndraft:drafts" "nnfolder+archive:sent") ("lists" "nnml:compojure" "nnml:ruby-core" "nnml:clojure" "nnml:emacs-devel") ("Gnus" "nnml:conkeror" "nnml:family" "nnml:magit" "nnml:seattle.rb" "nnml:bus-scheme" "nnml:nxhtml" "nnml:gems" "nnml:friends" "nnml:seafunc" "nnml:emacs-rails" "nnml:obby-users")))

(setq gnus-format-specs '((article-mode "Gnus: %g [%w] %S%m" (concat (format "Gnus: %s [%s] %s%s" (gnus-short-group-name gnus-tmp-group-name) (gnus-article-wash-status) gnus-tmp-subject (gnus-article-mime-part-status)))) (summary-dummy "   %(:                             :%) %S\n" (progn (insert "   ") (gnus-put-text-property (point) (progn (insert ":                             :") (point)) gnus-mouse-face-prop gnus-mouse-face) (insert " " gnus-tmp-subject "\n"))) (summary-mode "Gnus: %g [%A] %Z" (concat (format "Gnus: %s [%d] %s" (gnus-short-group-name gnus-tmp-group-name) gnus-tmp-article-number gnus-tmp-unread-and-unselected))) (summary "%{|%}%U%R%z%{|%}%(%-18,18f%{|%}%*%{%B%} %s%)\n" (let (gnus-position) (gnus-add-text-properties (point) (progn (insert "|") (point)) '(gnus-face t face bold)) (insert gnus-tmp-unread gnus-tmp-replied gnus-tmp-score-char) (gnus-add-text-properties (point) (progn (insert "|") (point)) '(gnus-face t face bold)) (gnus-put-text-property (point) (progn (insert (format "%-18s" (let* ((val (eval (let ((val (eval (gnus-summary-from-or-to-or-newsgroups gnus-tmp-header gnus-tmp-from)))) (if (> (string-width val) 18) (gnus-correct-substring val 0 18) val)))) (need (- 18 (string-width val)))) (if (> need 0) (concat nil val (make-string need 32)) val)))) (gnus-add-text-properties (point) (progn (insert "|") (point)) '(gnus-face t face bold)) (setq gnus-position (point)) (gnus-add-text-properties (point) (progn (insert gnus-tmp-thread-tree-header-string) (point)) '(gnus-face t face bold)) (insert " " gnus-tmp-subject-or-nil) (point)) gnus-mouse-face-prop gnus-mouse-face) (insert "\n") (if gnus-position (gnus-put-text-property gnus-position (1+ gnus-position) 'gnus-position t)))) (topic "%i[ %(%{%n%}%) -- %A ]%v\n" (progn (insert indentation "[ ") (gnus-put-text-property (point) (progn (gnus-add-text-properties (point) (progn (insert name) (point)) '(gnus-face t face bold)) (point)) gnus-mouse-face-prop gnus-mouse-face) (insert (format " -- %d ]%s\n" total-number-of-articles visible)))) (group-mode "Gnus: %%b {%M%:%S}" (concat (format "Gnus: %%b {%s%s%s}" gnus-tmp-news-method gnus-tmp-colon gnus-tmp-news-server))) (group "%M%S%p%P%5y:%B%(%g%)%O\n" (progn (insert (format "%c%c%c%s%5s:%c" gnus-tmp-marked-mark gnus-tmp-subscribed gnus-tmp-process-marked gnus-group-indentation gnus-tmp-number-of-unread gnus-tmp-summary-live)) (gnus-put-text-property (point) (progn (insert (if (boundp 'gnus-tmp-decoded-group) gnus-tmp-decoded-group gnus-tmp-group)) (point)) gnus-mouse-face-prop gnus-mouse-face) (insert gnus-tmp-moderated-string "\n"))) (version . "23.0.60.2")))
